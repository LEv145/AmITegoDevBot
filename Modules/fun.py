# –ò–º–ø–æ—Ä—Ç
import discord
import asyncio
import random
import sqlite3
import datetime
import requests
import json
from discord.ext import commands


# –ö–æ–¥
class Fun(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self._last_member = None
        self.cog_name = ["–§–∞–Ω–æ–≤—ã–µ"]

    @commands.command(
        aliases=["—Ä–∞–Ω–¥–æ–º", "—Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä", "random"],
        description="–†–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä",
        usage="—Ä–∞–Ω–¥–æ–º [–ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ] [–≤—Ç–æ—Ä–æ–π —á–∏—Å–ª–æ]")
    async def randomizer(self, ctx, number1=1, number2=100):
        await ctx.message.delete()
        try:
            if not number1:
                embed = discord.Embed()
                embed.set_author(name="–û—à–∏–±–∫–∞!",
                                 icon_url="https://media.discordapp.net/attachments/689879530542071952/728180075656118302/die-512.png?width=432&height=432")
                embed.add_field(name="–ü—Ä–æ–±–ª–µ–º–∞:", value="–í—ã –∑–∞–±—ã–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å —Ü–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞!")
                embed.add_field(name="–†–µ—à–µ–Ω–∏–µ:", value="–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å 2 —Ü–µ–ª—å–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏ (`/—Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä 1 10`)",
                                inline=False)
                await ctx.send(embed=embed)
                return
            elif not number2:
                embed = discord.Embed()
                embed.set_author(name="–û—à–∏–±–∫–∞!",
                                 icon_url="https://media.discordapp.net/attachments/689879530542071952/728180075656118302/die-512.png?width=432&height=432")
                embed.add_field(name="–ü—Ä–æ–±–ª–µ–º–∞:", value="–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç 2 —á–∏—Å–ª–æ!")
                embed.add_field(name="–†–µ—à–µ–Ω–∏–µ:", value="–í–≤–µ–¥–∏—Ç–µ 2 —Ü–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ!", inline=False)
                await ctx.send(embed=embed)
                return
            elif int(number1) > 1_000_000 or int(number2) > 1_000_000:
                embed = discord.Embed()
                embed.set_author(name="–û—à–∏–±–∫–∞!",
                                 icon_url="https://media.discordapp.net/attachments/689879530542071952/728180075656118302/die-512.png?width=432&height=432")
                embed.add_field(name="–ü—Ä–æ–±–ª–µ–º–∞:", value="–ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞!")
                embed.add_field(name="–†–µ—à–µ–Ω–∏–µ:", value="–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 1–º–ª–Ω!", inline=False)
                await ctx.send(embed=embed)
                return
            else:
                number1 = int(number1)
                number2 = int(number2)
                if number1 != number2:
                    e = discord.Embed()
                    e.set_author(name="–£—Ç–∏–ª–∏—Ç—ã: —Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä",
                                 icon_url="https://media.discordapp.net/attachments/689879530542071952/728180075656118302/die-512.png?width=432&height=432")
                    e.add_field(name="‚Äé‚Äé‚Äé‚Äé", value=f"{random.randint(number1, number2)}")
                    e.add_field(name="–ß–∏—Å–ª–æ:", value=f" {random.randint(number1, number2)}")
                    e.add_field(name="‚Äé‚Äé‚Äé‚Äé", value=f"{random.randint(number1, number2)}")
                    message_with_random = await ctx.send(embed=e)
                    popitka = 0
                    while popitka < 4:
                        em = discord.Embed()
                        em.set_author(name="–£—Ç–∏–ª–∏—Ç—ã: —Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä",
                                      icon_url="https://media.discordapp.net/attachments/689879530542071952/728180075656118302/die-512.png?width=432&height=432")
                        em.add_field(name="‚Äé‚Äé‚Äé‚Äé", value=f"{random.randint(number1, number2)}")
                        em.add_field(name="–ß–∏—Å–ª–æ:", value=f" {random.randint(number1, number2)}")
                        em.add_field(name="‚Äé‚Äé‚Äé‚Äé", value=f"{random.randint(number1, number2)}")
                        await message_with_random.edit(embed=em)
                        popitka += 1
                        await asyncio.sleep(0.3)
                    if popitka == 4:
                        em = discord.Embed()
                        em.set_author(name="–£—Ç–∏–ª–∏—Ç—ã: —Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä",
                                      icon_url="https://media.discordapp.net/attachments/689879530542071952/728180075656118302/die-512.png?width=432&height=432")
                        em.add_field(name="‚Äé‚Äé‚Äé‚Äé", value=f"{random.randint(number1, number2)}")
                        em.add_field(name="–ß–∏—Å–ª–æ:", value=f"__** {random.randint(number1, number2)}**__")
                        em.add_field(name="‚Äé‚Äé‚Äé‚Äé", value=f"{random.randint(number1, number2)}")
                        await message_with_random.edit(embed=em)
                elif number1 == number2:
                    e = discord.Embed()
                    e.set_author(name="–û—à–∏–±–∫–∞!",
                                 icon_url="https://media.discordapp.net/attachments/689879530542071952/728180075656118302/die-512.png?width=432&height=432")
                    e.add_field(name="–ü—Ä–æ–±–ª–µ–º–∞:", value="–£–∫–∞–∑–∞–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã!")
                    e.add_field(name="–†–µ—à–µ–Ω–∏–µ:",
                                value="–í–≤–µ–¥–∏—Ç–µ 2 —Ä–∞–∑–Ω—ã—Ö —Ü–µ–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞, —á—Ç–æ–±—ã –±–æ—Ç —Å–º–æ–≥ —Å–æ–∑–¥–∞—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω –∏–∑ —á–∏—Å–µ–ª",
                                inline=False)
                    await ctx.send(embed=e)
        except ValueError:
            e = discord.Embed()
            e.set_author(name="–û—à–∏–±–∫–∞!",
                         icon_url="https://media.discordapp.net/attachments/689879530542071952/728180075656118302/die-512.png?width=432&height=432")
            e.add_field(name="–ü—Ä–æ–±–ª–µ–º–∞:", value="–í–≤–µ–¥–µ–Ω–æ –Ω–µ —Ü–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ!")
            e.add_field(name="–†–µ—à–µ–Ω–∏–µ:", value="–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ!", inline=False)
            await ctx.send(embed=e)

    @commands.command(
        aliases=["—Å–∞–ø–µ—Ä", "saper"],
        description="–°—ã–≥—Ä–∞—Ç—å –≤ —Å–∞–ø–µ—Ä",
        usage="—Å–∞–ø–µ—Ä <None>")
    async def sap(self, ctx):
        await ctx.message.delete()

        r_list = ['üü©', 'üüß', 'üü•']

        rows = None
        columns = None

        msg = await ctx.send(f'–í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å :\n\n{r_list[0]}‚Äî Easy\n{r_list[1]}‚Äî Medium\n{r_list[2]}‚Äî Hard')
        for r in r_list:
            await msg.add_reaction(r)
        try:
            react, user = await self.bot.wait_for('reaction_add', timeout=30.0, check=lambda react,
                                                                                             user: user == ctx.author and react.message.channel == ctx.channel and react.emoji in r_list)
        except Exception:
            await msg.delete()
        else:
            if str(react.emoji) == r_list[0]:
                columns = 4
                rows = 4
                await msg.clear_reactions()
            elif str(react.emoji) == r_list[1]:
                columns = 8
                rows = 8
                await msg.clear_reactions()
            elif str(react.emoji) == r_list[2]:
                columns = 12
                rows = 12
                await msg.clear_reactions()
            else:
                await msg.delete()
                await ctx.send('–ù–µ–≤–µ—Ä–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è!', delete_after=10.0)

        bombs = columns * rows - 1
        bombs = bombs / 2.5
        bombs = round(random.randint(5, round(bombs)))

        columns = int(columns)
        rows = int(rows)
        bombs = int(bombs)

        grid = [[0 for num in range(columns)] for num in range(rows)]

        loop_count = 0
        while loop_count < bombs:
            x = random.randint(0, columns - 1)
            y = random.randint(0, rows - 1)

            if grid[y][x] == 0:
                grid[y][x] = 'B'
                loop_count = loop_count + 1

            if grid[y][x] == 'B':
                pass

        pos_x = 0
        pos_y = 0
        while pos_x * pos_y < columns * rows and pos_y < rows:

            adj_sum = 0

            for (adj_y, adj_x) in [(0, 1), (0, -1), (1, 0), (-1, 0), (1, 1), (-1, 1), (1, -1), (-1, -1)]:

                try:
                    if grid[adj_y + pos_y][adj_x + pos_x] == 'B' and adj_y + pos_y > -1 and adj_x + pos_x > -1:
                        adj_sum = adj_sum + 1
                except Exception:
                    pass

            if grid[pos_y][pos_x] != 'B':
                grid[pos_y][pos_x] = adj_sum

            if pos_x == columns - 1:
                pos_x = 0
                pos_y = pos_y + 1
            else:
                pos_x = pos_x + 1

        not_final = []

        for the_rows in grid:
            not_final.append(''.join(map(str, the_rows)))

        not_final = '\n'.join(not_final)

        not_final = not_final.replace('0', '||:zero:||')
        not_final = not_final.replace('1', '||:one:||')
        not_final = not_final.replace('2', '||:two:||')
        not_final = not_final.replace('3', '||:three:||')
        not_final = not_final.replace('4', '||:four:||')
        not_final = not_final.replace('5', '||:five:||')
        not_final = not_final.replace('6', '||:six:||')
        not_final = not_final.replace('7', '||:seven:||')
        not_final = not_final.replace('8', '||:eight:||')
        final = not_final.replace('B', '||:bomb:||')

        percentage = columns * rows
        percentage = bombs / percentage
        percentage = 100 * percentage
        percentage = round(percentage, 2)

        emb = discord.Embed(
            description=final,
            color=0xC0C0C0
        )
        emb.add_field(
            name='–ö–æ–ª-–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ :',
            value=columns,
            inline=True
        )
        emb.add_field(
            name='–ö–æ–ª-–≤–æ —Å—Ç—Ä–æ–∫:',
            value=rows,
            inline=True
        )
        emb.add_field(
            name='–í—Å–µ–≥–æ –∫–ª–µ—Ç–æ–∫ :',
            value=columns * rows,
            inline=True
        )
        emb.add_field(
            name='–ö–æ–ª-–≤–æ –±–æ–º–±:',
            value=bombs,
            inline=True
        )
        await msg.edit(embed=emb, content=None)

    @commands.command(
        aliases=["–ø–æ–∂–µ–Ω–∏—Ç—Å—è"],
        description="–ü–æ–∂–µ–Ω–∏—Ç—Å—è —Å —é–∑–µ—Ä–æ–º",
        usage="–ø–æ–∂–µ–Ω–∏—Ç—Å—è <–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>")
    async def marry(self, ctx, user: discord.User = None):
        db = sqlite3.connect("Data/DataBase/Marry.db")
        cursor = db.cursor()

        cursor.execute("""CREATE TABLE IF NOT EXISTS marrys(
                            id1 BIGINT,
                            id2 BIGINT,
                            datem TEXT
                            )""")
        db.commit()

        no_one = []
        if user:
            if user == ctx.message.author:
                await ctx.send('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∂–µ–Ω–∏—Ç—å—Å—è –Ω–∞ —Å–µ–±–µ')
            else:
                cursor.execute(
                    f"SELECT * FROM marrys WHERE id1='{ctx.message.author.id}' OR id2='{ctx.message.author.id}'")
                res = cursor.fetchall()
                cursor.execute(f"SELECT * FROM marrys WHERE id1='{user.id}' OR id2='{user.id}'")
                res1 = cursor.fetchall()
                if not res:
                    await ctx.send(
                        f'{user.mention}, —Ö–æ—Ç–∏—Ç–µ –ª–∏ –≤—ã –ø–æ–∂–µ–Ω–∏—Ç—å—Å—è —Å {ctx.message.author.mention}? (–ù–∞–ø–∏—à–∏—Ç–µ : –î–∞ –∏–ª–∏ –ù–µ—Ç)')
                    try:
                        msg = await self.bot.wait_for('message', timeout=300.0,
                                                      check=lambda message: message.author == user)
                    except asyncio.TimeoutError:
                        await ctx.send('–£–≤—ã, –Ω–æ –≤—Ä–µ–º—è –≤—ã—à–ª–æ.')
                        db.close()
                    else:
                        if msg.content.lower() == '–¥–∞':
                            cursor.execute(
                                f"INSERT INTO marrys(id1, id2, datem) VALUES({ctx.message.author.id}, {user.id}, '{datetime.date.today()}')")
                            db.commit()
                            await ctx.send(f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢–µ–ø–µ—Ä—å {ctx.message.author.mention} –∏ {user.mention} –∂–µ–Ω–∞—Ç—ã!')
                            db.close()
                        elif msg.content.lower() == '–Ω–µ—Ç':
                            await ctx.send(f'{ctx.message.author.mention}, –º–Ω–µ –∂–∞–ª—å, –Ω–æ –≤–∞–º –æ—Ç–∫–∞–∑–∞–ª–∏.')
                            db.close()
                else:
                    if not res == no_one:
                        await ctx.send('–í—ã —É–∂–µ –∂–µ–Ω–∞—Ç—ã')
                    elif not res1 == no_one:
                        await ctx.send('–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∂–µ–Ω–∞—Ç.')
                db.close()
        elif not user:
            cursor.execute(f"SELECT * FROM marrys WHERE id1='{ctx.message.author.id}' OR id2='{ctx.message.author.id}'")
            res = cursor.fetchall()
            if not res:
                await ctx.send('–í—ã –Ω–µ –∂–µ–Ω–∞—Ç—ã.')
                db.close()
            else:
                res = res[0]
                if res[0] == ctx.message.author.id:
                    await ctx.send(f"–í—ã –∂–µ–Ω–∞—Ç—ã —Å {self.bot.get_user(res[1])}, –≤—ã –∂–µ–Ω–∏–ª–∏—Å—å {res[2].replace('-', '.')}")
                    db.close()
                elif res[1] == ctx.message.author.id:
                    await ctx.send(f"–í—ã –∂–µ–Ω–∞—Ç—ã —Å {self.bot.get_user(res[0])}, –≤—ã –∂–µ–Ω–∏–ª–∏—Å—å {res[2].replace('-', '.')}")
                    db.close()

    @commands.command(
        aliases=["—Ä–∞–∑–≤–µ—Å—Ç–∏—Å—å"],
        description="–†–∞–∑–≤–µ—Å—Ç–∏—Ç—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º",
        usage="—Ä–∞–∑–≤–µ—Å—Ç–∏—Å—å <–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>")
    async def divorce(self, ctx):
        db = sqlite3.connect("Data/DataBase/Marry.db")
        cursor = db.cursor()
        cursor.execute(f"SELECT * FROM marrys WHERE id1='{ctx.message.author.id}' OR id2='{ctx.message.author.id}'")
        res = cursor.fetchall()
        if not res:
            await ctx.send('–í—ã –Ω–µ –∂–µ–Ω–∞—Ç—ã.')
            db.close()
        else:
            await ctx.send(f'–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–≤–µ—Å—Ç–∏—Å—å? (–ù–∞–ø–∏—à–∏—Ç–µ : –î–∞ –∏–ª–∏ –ù–µ—Ç)')
            try:
                msg = await self.bot.wait_for('message', timeout=70.0,
                                              check=lambda message: message.author == ctx.author)
            except asyncio.TimeoutError:
                await ctx.send('–£–≤—ã, –Ω–æ –≤—Ä–µ–º—è –≤—ã—à–ª–æ.')
                db.close()
            else:
                if msg.content.lower() == '–¥–∞':
                    cursor.execute(
                        f"DELETE FROM marrys WHERE id1='{ctx.message.author.id}' OR id2='{ctx.message.author.id}'")
                    db.commit()
                    db.close()
                    await ctx.send('–í—ã —Ä–∞–∑–≤–µ–ª–∏—Å—å.')
                elif msg.content.lower() == '–Ω–µ—Ç':
                    await ctx.send('–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É.')
                    db.close()

    @commands.command(aliases=['–ø–æ–∏—Å–∫', 'g', 'google', '—á–∏—Ç–∞–π'], description="–ë–æ—Ç –∑–∞–≥—É–≥–ª–∏—Ç—å –≤–º–µ—Å—Ç–æ —Ç–µ–±—è",
                      usage="search <–∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∑–∞–ø—Ä–æ—Å> | [–Æ–∑–µ—Ä]")
    async def search(self, ctx, *, amount: str):
        member=None
        if not amount:
            await ctx.send(
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–∞–∫—É—é –∫–æ—Å—Ç—Ä—É–∫—Ü–∏—é: `!!search [–∑–∞–ø—Ä–æ—Å] | [–Æ–∑–µ—Ä]`")

        await ctx.channel.purge(limit=1)
        
        list_ = amount.split('|')
        
        if len(list_) >= 2:
            member = list_[-1]
            del list_[-1]
                     
        amount = '|'.join(list_)
        a = '+'.join(amount.split())

        if member:
            await ctx.send(member)
        embed = discord.Embed(title=f"{amount}", url=f'https://google.gik-team.com/?q={a}', color=0xff7a0d)

        await ctx.send(embed=embed)

    @commands.command(aliases=['–¥–æ–∫–∏', '–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è'], description="–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è", usage="–¥–æ–∫–∏ <None>")
    async def doc(self, ctx):
        content = """
        –û—Å–Ω–æ–≤–∞: https://bit.ly/2Z7FOC7
        –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ: https://bit.ly/3gvnF74
        –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç: https://bit.ly/2CjesQn
        API: https://bit.ly/3iHqJPB
        FAQ: https://bit.ly/326Q1kn       
        """
        embed = discord.Embed(title="–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è!", description=content, color=0xff7a0d)
        await ctx.send(embed=embed)

    @commands.command(aliases=["–∫–æ—Ç"], description="–í—ã–≤–µ–¥–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –∫–æ—Ç–∞", usage="–∫–æ—Ç <None>")
    async def cat(self, ctx):
        for item in json.loads(requests.get("https://api.thecatapi.com/v1/images/search").text):
            embed = discord.Embed(color=discord.Color.blue())
            embed.set_image(url=item["url"])
            await ctx.send(embed=embed)
            break

    @commands.command(aliases=["—Å–æ–±–∞–∫–∞"], description="–í—ã–≤–µ–¥–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω—É—é —Å–æ–±–∞–∫—É", usage="—Å–æ–±–∞–∫–∞ <None>")
    async def dog(self, ctx):
        response = requests.get('https://api.thedogapi.com/v1/images/search')
        json_data = json.loads(response.text)
        url = json_data[0]['url']

        embed = discord.Embed(title="–í–æ—Ç —Å–æ–±–∞—á–∫–∞! –ì–∞—Ñ!", color=0xff9900)
        embed.set_image(url=url)

        await ctx.send(embed=embed)

    @commands.command(aliases=["–ø–∞–Ω–¥–∞"], description="–í—ã–≤–µ–¥–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω—É—é –ø–∞–Ω–¥—É", usage="–ø–∞–Ω–¥–∞ <None>")
    async def panda(self, ctx):
        response = requests.get('https://some-random-api.ml/img/panda')
        jsoninf = json.loads(response.text)
        url = jsoninf['link']
        embed = discord.Embed(color=0xff9900)
        embed.set_image(url=url)
        await ctx.send(embed=embed)

    @commands.command(
        aliases=["–ø—Ç–∏—Ü–∞"],
        description="–í—ã–≤–µ–¥–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω—É—é –ø—Ç–∏—Ü—É",
        usage="–ø—Ç–∏—Ü–∞ <None>")
    async def bird(self, ctx):
        response = requests.get('https://some-random-api.ml/img/birb')
        jsoninf = json.loads(response.text)
        url = jsoninf['link']
        embed = discord.Embed(color=0xff9900)
        embed.set_image(url=url)
        await ctx.send(embed=embed)

    @commands.command(
        aliases=["–ª–∏—Å–∞"],
        description="–í—ã–≤–µ–¥–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω—É—é –ª–∏—Å–∫",
        usage="–ª–∏—Å–∞ <None>")
    async def fox(self, ctx):
        response = requests.get('https://some-random-api.ml/img/fox')
        jsoninf = json.loads(response.text)
        url = jsoninf['link']
        embed = discord.Embed(color=0xff9900)
        embed.set_image(url=url)
        await ctx.send(embed=embed)

    @commands.command(
        aliases=["–∫–æ–∞–ª–∞"],
        description="–í—ã–≤–µ–¥–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω—É—é –∫–æ–∞–ª—É",
        usage="–∫–æ–∞–ª–∞ <None>")
    async def koala(self, ctx):
        response = requests.get('https://some-random-api.ml/img/koala')
        jsoninf = json.loads(response.text)
        url = jsoninf['link']
        embed = discord.Embed(color=0xff9900)
        embed.set_image(url=url)
        await ctx.send(embed=embed)

    @commands.command(
        aliases=["–∫—Ä–∞—Å–Ω–∞—è_–ø–∞–Ω–¥–∞"],
        description="–í—ã–≤–µ–¥–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω—É—é –∫—Ä–∞—Å–Ω—É—é –ø–∞–Ω–¥—É",
        usage="–∫—Ä–∞—Å–Ω–∞—è_–ø–∞–Ω–¥–∞ <None>"
    )
    async def red_panda(self, ctx):
        response = requests.get('https://some-random-api.ml/img/red_panda')
        jsoninf = json.loads(response.text)
        url = jsoninf['link']
        embed = discord.Embed(color=0xff9900)
        embed.set_image(url=url)
        await ctx.send(embed=embed)

    @commands.command(aliases=['–ª–æ—Ç–µ—Ä–µ—è', '—Ä–∞–Ω–¥–æ–º–Ω—ã–π_—á–µ–ª–æ–≤–µ–∫', 'rand_membed'], description="–õ–æ—Ç–µ—Ä–µ—è –Ω–∞ –≤—Å—ë–º —Å–µ—Ä–≤–µ—Ä–µ",
                      usage="–ª–æ—Ç–µ—Ä–µ—è <None>")
    async def lottery(self, ctx):
        member = random.choice(ctx.guild.members)
        await ctx.send(f"{member.display_name} - —Å—á–∞—Å—Ç–ª–∏–≤—á–∏–∫")
                                   
    @commands.command(aliases=["–º–æ–Ω–µ—Ç–∫–∞" '–æ—Ä–µ–ª_—Ä–µ—à–∫–∞','–æ_—Ä','–æ—Ä—ë–ª_—Ä–µ—à–∫–∞'],description='–ë–æ—Ç –ø–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ—Ç –º–æ–Ω–µ—Ç–∫—É',usage='–º–æ–Ω–µ—Ç–∫–∞ <None>')
    async def o_r(self, ctx):
        robot = ("–æ—Ä—ë–ª", "—Ä–µ—à–∫–∞")
        robot_choice = random.choice(robot)
        if robot_choice == "–æ—Ä—ë–ª":
            emb = discord.Embed(title="–û—Ä–µ–ª –∏–ª–∏ —Ä–µ—à–∫–∞", colour=discord.Colour.red(), timestamp=ctx.message.created_at)
            emb.add_field(name="–ü–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ–º –º–æ–Ω–µ—Ç–∫—É....", value="**–û—Ä—ë–ª**")
            emb.set_author(name="‚†Ä", icon_url="https://www.iconpacks.net/icons/2/free-dollar-coin-icon-2139-thumb.png")
            emb.set_footer(text='–ö–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞: {}'.format(ctx.author.name), icon_url=ctx.author.avatar_url)
            await ctx.send(embed=emb)

        if robot_choice == "—Ä–µ—à–∫–∞":
            emb = discord.Embed(title="–û—Ä–µ–ª –∏–ª–∏ —Ä–µ—à–∫–∞", colour=discord.Colour.red(), timestamp=ctx.message.created_at)
            emb.add_field(name="–ü–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ–º –º–æ–Ω–µ—Ç–∫—É....", value="**–†–µ—à–∫–∞**")
            emb.set_author(name="‚†Ä", icon_url="https://www.iconpacks.net/icons/2/free-dollar-coin-icon-2139-thumb.png")
            emb.set_footer(text='–ö–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞: {}'.format(ctx.author.name), icon_url=ctx.author.avatar_url)
            await ctx.send(embed=emb)
                                   

    @commands.command(aliases=["–∫–Ω–±", "–∫–∞–º–µ–Ω—å_–Ω–æ–∂–Ω–∏—Ü—ã_–±—É–º–∞–≥–∞"],description='–ò–≥—Ä–∞ –≤ –∫–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã-–±—É–º–∞–≥–∞',usage='–∫–Ω–± <–∫–∞–º–µ–Ω—å/–Ω–æ–∂–Ω–∏—Ü—ã/–±—É–º–∞–≥–∞>')
    async def rsp(self,ctx, mess):
        robot = ['–ö–∞–º–µ–Ω—å', '–ù–æ–∂–Ω–∏—Ü—ã', '–ë—É–º–∞–≥–∞']
        stone_list = ["stone", "–∫–∞–º–µ–Ω—å","–∫"]
        paper_list = ["paper", "–±—É–º–∞–≥–∞", "–±"]
        scissors_list = ["scissors", "–Ω–æ–∂–Ω–∏—Ü—ã","–Ω"]  
                                   
        out = {"icon": None, "value": None, "img": None}
                                   
        robot_choice = random.choice(robot)  
                                   
        win_list = ["–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!","–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ :—Å", "–ù–∏—á—å—è!"]
            
        # Embed
        emb = discord.Embed(title=robot_choice, colour=discord.Colour.red(), timestamp=ctx.message.created_at)
                                   
        if mess.lower() in stone_list:       
            if robot_choice == '–ù–æ–∂–Ω–∏—Ü—ã':
                win = win_list[0]
                out["icon"] = "‚úÇ"
            elif robot_choice == '–ë—É–º–∞–≥–∞':
                win = win_list[1]
                out["icon"] = "üßª"
            else:
                win = win_list[2]
                out["icon"] = "ü•î"

        elif mess == "–ë—É–º–∞–≥–∞" or mess == "–ë" or mess == "–±—É–º–∞–≥–∞" or mess == "–±":
            if robot_choice == '–ö–∞–º–µ–Ω—å':
                win = win_list[0]
                out["icon"] = "ü•î"     
            elif robot_choice == '–ù–æ–∂–Ω–∏—Ü—ã':
                win = win_list[1]
                out["icon"] = "‚úÇ"             
            else:
                win = win_list[2]
                out["icon"] = "üßª"               

        elif mess == "–ù–æ–∂–Ω–∏—Ü—ã" or mess == "–ù" or mess == "–Ω–æ–∂–Ω–∏—Ü—ã" or mess == "–Ω":
            if robot_choice == '–ë—É–º–∞–≥–∞':
                win = win_list[0]
                out["icon"] = "üßª"               
            elif robot_choice == '–ö–∞–º–µ–Ω—å':
                win = win_list[1]
                out["icon"] = "ü•î"                
            else:
                win = win_list[2]  
                out["icon"] = "‚úÇ"                 
                
        if win == "–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!":
            out["img"] = "https://im0-tub-ru.yandex.net/i?id=12af96d2422023b2e8c0854c6960d229&n=13&exp=1"
        elif win == "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ :—Å":
            out["img"] = "https://thumbs.dreamstime.com/b/%D0%BF%D0%BE%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5-87995106.jpg"
        else:
            out["img"] = "https://avatanplus.com/files/resources/original/574454ca56620154e2eb3672.png"
                                   
        emb.add_field(name=out["icon"], value=win)
        emb.set_author(name="‚†Ä",
        icon_url=out["img"])
        emb.set_footer(icon_url=ctx.author.avatar_url)
        await ctx.send(embed=emb)


def setup(client):
    client.add_cog(Fun(client))
